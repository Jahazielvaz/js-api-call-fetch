DEFINITIONS
Function Expressions: instead of directly naming the function you create an anonymous function and assign it to a variable name, and that's what's known as a function expression.
Passing Functions Through Other Functions: You can pass one function as a parameter and execute it within the current function

module.exports: Here you specify which aspects of a module you want to make available, and you do this by setting the module.exports equal to the names of the methods you want to include within it. These can be stored as an object, as standalone methods, etc

Require: This allows you to access the methods returned by the module.exports of the module of choice. You invoke this by including the path within the require() method. And of course it's a good idea to store it in a variable, so you can access it easier.


STOCK METHODS
__filename : Returns the name of the current file that's being invoked
__dirname : Returns the name of the current directory that's being invoked
setTimeout() : Just like in JS returns the given result based on a specified time
setInterval() : Just like in JS returns the given result based on a looped timer
clearInterval() : Standard JS
